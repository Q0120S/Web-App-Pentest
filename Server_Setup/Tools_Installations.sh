#!/bin/bash
sudo apt-get -y update
sudo apt-get -y upgrade

sudo apt-get install -y libcurl4-openssl-dev
sudo apt-get install -y libssl-dev
sudo apt-get install -y jq
sudo apt-get install -y ruby-full
sudo apt-get install -y libcurl4-openssl-dev libxml2 libxml2-dev libxslt1-dev ruby-dev build-essential libgmp-dev zlib1g-dev
sudo apt-get install -y build-essential libssl-dev libffi-dev python-dev
sudo apt-get install -y python-setuptools
sudo apt-get install -y libldns-dev
sudo apt-get install -y python3-pip
sudo apt-get install -y python-pip
sudo apt-get install -y python-dnspython
sudo apt-get install -y git
sudo apt-get install -y rename
sudo apt-get install -y xargs


if ! [ -d "$GOPATH" ] || test "$CURRENT_GO_VERSION" != "$LATEST_GO_VERSION"; then
echo "current Golang version: $(go version)"
CURRENT_GO_VERSION=$(go version)
LATEST_GO_VERSION="go version $(curl "https://go.dev/VERSION?m=text" --silent) linux/amd64"
echo "It looks like go is not installed or not the latest one, would you like to install it now"
echo "A latest Golang is available: $LATEST_GO_VERSION"
PS3="Please select an option : "
choices=("yes" "no")
select choice in "${choices[@]}"; do
        case $choice in
                yes)
                                        echo "Installing Golang"
                                        wget "https://go.dev/dl/$(curl "https://go.dev/VERSION?m=text" --silent).linux-amd64.tar.gz"
                                        rm -rf /usr/local/go && tar -C /usr/local -xzf go1.19.4.linux-amd64.tar.gz
                                        export GOPATH=$HOME/go
                                        export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
                                        go version
                                        break
					;;
                                no)
                                        echo "Please install go and rerun this script"
                                        echo "Aborting installation..."
                                        exit 1
                                        ;;
	        esac	
done
fi


find_result=$(find /root/ -name Tools)
if [ -n "$find_result" ]; then
  cd ~/Tools
else
  mkdir ~/Tools
  cd ~/Tools
fi

echo "installing sqlmap"
git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git sqlmap-dev
echo "done"

echo "installing commix"
git clone https://github.com/commixproject/commix.git commix
echo "done"

echo "installing jwt_tool"
git clone https://github.com/ticarpi/jwt_tool.git
echo "done"

echo "installing ssrfmap"
git clone https://github.com/swisskyrepo/SSRFmap.git
echo "done"

echo "installing nikto"
git clone https://github.com/sullo/nikto.git
echo "done"

echo "installing katana"
go install github.com/projectdiscovery/katana/cmd/katana@latest
echo "done"

echo "installing ffuf"
go install github.com/ffuf/ffuf@latest
echo "done"

echo "installing nuclei"
go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest
echo "done"

echo "installing httpx"
go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest
echo "done"

echo "installing subfinder"
go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
echo "done"

echo "installing interactsh"
go install -v github.com/projectdiscovery/interactsh/cmd/interactsh-client@latest
echo "done"

echo "installing waybackurls"
go install github.com/tomnomnom/waybackurls@latest
echo "done"

echo "installing dalfox"
go install github.com/hahwul/dalfox/v2@latest
echo "done"

echo "installing httprobe"
go install github.com/tomnomnom/httprobe@latest
echo "done"

echo "installing dnsx"
go install -v github.com/projectdiscovery/dnsx/cmd/dnsx@latest
echo "done"

echo "installing cookiemonster"
go install github.com/iangcarroll/cookiemonster/cmd/cookiemonster@latest
echo "done"

echo "installing nmap"
sudo apt-get install -y nmap
echo "done"

cd
echo "installing bash_profile aliases"
cd ~/Web-App-Pentest/Server_Setup/ 
cat .bash_profile >> ~/.zshrc
source ~/.zshrc
cd

echo -e "\n\n\n\n\n\n\n\n\n\n\nDone! All tools are set up in ~/Tools"
